@page "/Config/ListProduct"
<h3>ListProducts</h3>
@if (productos == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead class="thead-dark">
            <tr style="text-align:center;">
                <th scope="col">Nombre</th>
                <th scope="col">Precio</th>
                <th scope="col">Categoria</th>
                <th scope="col">Cantidad</th>
                <th scope="col">Foto</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto in productos)
            {
            <tr style="text-align:center;">
                <td>@producto.Nombre</td>
                <td>@producto.Precio</td>


                @foreach (var item in categorias)
                {
                    if (item.Id == producto.CategoriaId)
                    {
                        <td>@item.Nombre</td>
                    }

                }
                <td>@producto.Cantidad</td>

                <td><img src="data:image/jpg; base64,@Convert.ToBase64String(producto.Imagen)" alt="Alternate Text" /></td>
                <td>
                    <a href="/Config/EditProducts/@producto.Id" class="btn btn-primary btn-xs" title="Editar">
                        <i class="oi oi-pencil"></i>
                    </a>

                    @*<a href="/Config/DeleteProducts/@producto.Id" class="btn btn-danger btn-xs" title="Eliminar">
                <i class="oi oi-trash"></i>
            </a>*@

                    <button @onclick="() => Eliminar(producto.Id)" class="btn btn-danger btn-xs" title="Eliminar">
                        <i class="oi oi-trash"></i>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}
@code {
    private IEnumerable<Producto> productos { get; set; }
    List<Categoria> categorias;
    List<string> segunda;
    protected override async Task OnInitializedAsync()
    {
        productos = await ProductsService.GetAllProducts();
        categorias = dbContext.Categorias.ToList();
    }
    protected async Task Eliminar(int id)
    {
        await ProductsService.DeleteProduct(id);
        productos = null;
        productos = await ProductsService.GetAllProducts();
    }
}
